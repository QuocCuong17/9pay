package org.apache.pdfbox.pdmodel.font.encoding;

import androidx.constraintlayout.core.motion.utils.TypedValues;
import androidx.media3.exoplayer.upstream.CmcdData;
import androidx.media3.extractor.text.ttml.TtmlNode;
import androidx.media3.extractor.ts.PsExtractor;
import com.google.firebase.analytics.FirebaseAnalytics;
import com.google.firebase.dynamiclinks.DynamicLink;
import com.google.mlkit.common.MlKitException;
import io.sentry.profilemeasurements.ProfileMeasurement;
import io.sentry.protocol.ViewHierarchyNode;
import org.apache.pdfbox.cos.COSBase;
import org.apache.pdfbox.cos.COSName;
import org.apache.pdfbox.pdmodel.common.PDPageLabelRange;
import org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes;
import org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink;
import org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary;
import org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary;
import org.bouncycastle.crypto.tls.CipherSuite;
import org.bouncycastle.math.Primes;
import org.jmrtd.cbeff.ISO781611;

/* loaded from: classes5.dex */
public class WinAnsiEncoding extends Encoding {
    public static final WinAnsiEncoding INSTANCE = new WinAnsiEncoding();

    public WinAnsiEncoding() {
        add(65, "A");
        add(198, "AE");
        add(CipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256, "Aacute");
        add(CipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256, "Acircumflex");
        add(CipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256, "Adieresis");
        add(192, "Agrave");
        add(CipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256, "Aring");
        add(CipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256, "Atilde");
        add(66, "B");
        add(67, "C");
        add(199, "Ccedilla");
        add(68, "D");
        add(69, "E");
        add(201, "Eacute");
        add(202, "Ecircumflex");
        add(203, "Edieresis");
        add(200, "Egrave");
        add(208, "Eth");
        add(128, "Euro");
        add(70, PDNumberFormatDictionary.FRACTIONAL_DISPLAY_FRACTION);
        add(71, "G");
        add(72, StandardStructureTypes.H);
        add(73, "I");
        add(MlKitException.CODE_SCANNER_PIPELINE_INITIALIZATION_ERROR, "Iacute");
        add(MlKitException.CODE_SCANNER_PIPELINE_INFERENCE_ERROR, "Icircumflex");
        add(MlKitException.CODE_SCANNER_GOOGLE_PLAY_SERVICES_VERSION_TOO_OLD, "Idieresis");
        add(MlKitException.CODE_SCANNER_TASK_IN_PROGRESS, "Igrave");
        add(74, "J");
        add(75, "K");
        add(76, "L");
        add(77, "M");
        add(78, "N");
        add(209, "Ntilde");
        add(79, PDAnnotationLink.HIGHLIGHT_MODE_OUTLINE);
        add(CipherSuite.TLS_PSK_WITH_AES_128_CBC_SHA, "OE");
        add(Primes.SMALL_FACTOR_LIMIT, "Oacute");
        add(212, "Ocircumflex");
        add(214, "Odieresis");
        add(210, "Ograve");
        add(216, "Oslash");
        add(213, "Otilde");
        add(80, "P");
        add(81, "Q");
        add(82, "R");
        add(83, "S");
        add(138, "Scaron");
        add(84, "T");
        add(222, "Thorn");
        add(85, PDBorderStyleDictionary.STYLE_UNDERLINE);
        add(218, "Uacute");
        add(219, "Ucircumflex");
        add(220, "Udieresis");
        add(217, "Ugrave");
        add(86, "V");
        add(87, "W");
        add(88, "X");
        add(89, "Y");
        add(221, "Yacute");
        add(CipherSuite.TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, "Ydieresis");
        add(90, "Z");
        add(142, "Zcaron");
        add(97, "a");
        add(225, "aacute");
        add(226, "acircumflex");
        add(180, "acute");
        add(228, "adieresis");
        add(230, "ae");
        add(224, "agrave");
        add(38, "ampersand");
        add(229, "aring");
        add(94, "asciicircum");
        add(126, "asciitilde");
        add(42, "asterisk");
        add(64, DynamicLink.ItunesConnectAnalyticsParameters.KEY_ITUNES_CONNECT_AT);
        add(227, "atilde");
        add(98, "b");
        add(92, "backslash");
        add(124, "bar");
        add(123, "braceleft");
        add(125, "braceright");
        add(91, "bracketleft");
        add(93, "bracketright");
        add(CipherSuite.TLS_DH_anon_WITH_AES_128_GCM_SHA256, "brokenbar");
        add(CipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA, "bullet");
        add(99, "c");
        add(231, "ccedilla");
        add(CipherSuite.TLS_RSA_PSK_WITH_NULL_SHA256, "cedilla");
        add(CipherSuite.TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, "cent");
        add(136, "circumflex");
        add(58, "colon");
        add(44, "comma");
        add(CipherSuite.TLS_PSK_WITH_AES_256_GCM_SHA384, "copyright");
        add(CipherSuite.TLS_DH_DSS_WITH_AES_128_GCM_SHA256, FirebaseAnalytics.Param.CURRENCY);
        add(100, "d");
        add(134, "dagger");
        add(135, "daggerdbl");
        add(CipherSuite.TLS_PSK_WITH_NULL_SHA256, "degree");
        add(168, "dieresis");
        add(247, "divide");
        add(36, "dollar");
        add(101, "e");
        add(233, "eacute");
        add(234, "ecircumflex");
        add(235, "edieresis");
        add(232, "egrave");
        add(56, "eight");
        add(133, "ellipsis");
        add(151, "emdash");
        add(CipherSuite.TLS_RSA_WITH_SEED_CBC_SHA, "endash");
        add(61, "equal");
        add(PsExtractor.VIDEO_STREAM_MASK, "eth");
        add(33, "exclam");
        add(CipherSuite.TLS_DH_RSA_WITH_AES_256_GCM_SHA384, "exclamdown");
        add(102, "f");
        add(53, "five");
        add(ISO781611.CREATION_DATE_AND_TIME_TAG, "florin");
        add(52, "four");
        add(103, "g");
        add(223, "germandbls");
        add(96, "grave");
        add(62, "greater");
        add(CipherSuite.TLS_DHE_PSK_WITH_AES_256_GCM_SHA384, "guillemotleft");
        add(CipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256, "guillemotright");
        add(139, "guilsinglleft");
        add(CipherSuite.TLS_DH_anon_WITH_SEED_CBC_SHA, "guilsinglright");
        add(104, CmcdData.Factory.STREAMING_FORMAT_HLS);
        add(45, "hyphen");
        add(105, CmcdData.Factory.OBJECT_TYPE_INIT_SEGMENT);
        add(237, "iacute");
        add(238, "icircumflex");
        add(239, "idieresis");
        add(236, "igrave");
        add(106, "j");
        add(107, "k");
        add(108, CmcdData.Factory.STREAM_TYPE_LIVE);
        add(60, "less");
        add(172, "logicalnot");
        add(109, "m");
        add(CipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA384, "macron");
        add(CipherSuite.TLS_DHE_PSK_WITH_NULL_SHA384, "mu");
        add(215, "multiply");
        add(110, "n");
        add(57, "nine");
        add(241, "ntilde");
        add(35, "numbersign");
        add(111, "o");
        add(243, "oacute");
        add(244, "ocircumflex");
        add(246, "odieresis");
        add(CipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256, "oe");
        add(242, "ograve");
        add(49, "one");
        add(189, "onehalf");
        add(188, "onequarter");
        add(CipherSuite.TLS_RSA_PSK_WITH_NULL_SHA384, "onesuperior");
        add(CipherSuite.TLS_DHE_PSK_WITH_AES_128_GCM_SHA256, "ordfeminine");
        add(CipherSuite.TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256, "ordmasculine");
        add(248, "oslash");
        add(245, "otilde");
        add(112, TtmlNode.TAG_P);
        add(CipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA256, "paragraph");
        add(40, "parenleft");
        add(41, "parenright");
        add(37, ProfileMeasurement.UNIT_PERCENT);
        add(46, TypedValues.CycleType.S_WAVE_PERIOD);
        add(CipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA384, "periodcentered");
        add(CipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA, "perthousand");
        add(43, "plus");
        add(CipherSuite.TLS_PSK_WITH_NULL_SHA384, "plusminus");
        add(113, "q");
        add(63, "question");
        add(CipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256, "questiondown");
        add(34, "quotedbl");
        add(CipherSuite.TLS_RSA_WITH_CAMELLIA_256_CBC_SHA, "quotedblbase");
        add(CipherSuite.TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA, "quotedblleft");
        add(CipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA, "quotedblright");
        add(CipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA, "quoteleft");
        add(CipherSuite.TLS_RSA_PSK_WITH_RC4_128_SHA, "quoteright");
        add(130, "quotesinglbase");
        add(39, "quotesingle");
        add(114, PDPageLabelRange.STYLE_ROMAN_LOWER);
        add(CipherSuite.TLS_PSK_WITH_AES_128_CBC_SHA256, "registered");
        add(115, CmcdData.Factory.STREAMING_FORMAT_SS);
        add(CipherSuite.TLS_DHE_RSA_WITH_SEED_CBC_SHA, "scaron");
        add(CipherSuite.TLS_DH_anon_WITH_AES_256_GCM_SHA384, "section");
        add(59, "semicolon");
        add(55, "seven");
        add(54, "six");
        add(47, "slash");
        add(32, "space");
        add(CipherSuite.TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, "sterling");
        add(116, "t");
        add(254, "thorn");
        add(51, "three");
        add(190, "threequarters");
        add(CipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA384, "threesuperior");
        add(CipherSuite.TLS_DH_RSA_WITH_SEED_CBC_SHA, "tilde");
        add(153, "trademark");
        add(50, "two");
        add(CipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA256, "twosuperior");
        add(117, "u");
        add(250, "uacute");
        add(251, "ucircumflex");
        add(252, "udieresis");
        add(249, "ugrave");
        add(95, "underscore");
        add(118, "v");
        add(119, "w");
        add(120, ViewHierarchyNode.JsonKeys.X);
        add(121, ViewHierarchyNode.JsonKeys.Y);
        add(253, "yacute");
        add(255, "ydieresis");
        add(CipherSuite.TLS_DH_DSS_WITH_AES_256_GCM_SHA384, "yen");
        add(122, "z");
        add(158, "zcaron");
        add(48, "zero");
        add(160, "space");
        add(CipherSuite.TLS_RSA_PSK_WITH_AES_256_GCM_SHA384, "hyphen");
        for (int i = 33; i <= 255; i++) {
            if (!this.codeToName.containsKey(Integer.valueOf(i))) {
                add(i, "bullet");
            }
        }
    }

    @Override // org.apache.pdfbox.pdmodel.common.COSObjectable
    public COSBase getCOSObject() {
        return COSName.WIN_ANSI_ENCODING;
    }
}
